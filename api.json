{
	"swagger": "2.0",
	"paths": {
		"/users": {
			"GET": {
				"description": "List all users",
				"operationId": "user-list",
				"responses": {
					"200": {
						"description": "Array of users",
						"schema": {
							"$ref": "#/definitions/PagedUsers"
						}
					}
				}
			},
			"POST": {
				"description": "Creates an user",
				"operationId": "user-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new user",
						"schema": {
							"$ref": "#/definitions/WritableUser"
						}
					}
				],
				"responses": {
					"201": {
						"description": "user created"
					}
				}
			}
		},
		"/users/{id}": {
			"GET": {
				"description": "Reads an user",
				"operationId": "user-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the user",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			},
			"DELETE": {
				"description": "Deletes an user",
				"operationId": "user-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "user deleted"
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			},
			"PATCH": {
				"description": "Updates an user",
				"operationId": "user-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "user updated",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			}
		},
		"/users/{id}/relationship/groups": {
			"GET": {
				"description": "Reads the relationship of user to group",
				"operationId": "user-to-group-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			},
			"POST": {
				"description": "Adds group as relationship to user",
				"operationId": "user-to-group-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			},
			"DELETE": {
				"description": "Removes group as relationship of user",
				"operationId": "user-to-group-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			},
			"PATCH": {
				"description": "Updates the relationship of user to group",
				"operationId": "user-to-group-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "No user found"
					}
				}
			}
		}
	},
	"definitions": {
		"Meta": {
			"type": "object",
			"properties": {
				"total": {
					"type": "integer"
				},
				"first": {
					"type": "integer"
				},
				"next": {
					"type": "integer"
				},
				"previous": {
					"type": "integer"
				},
				"last": {
					"type": "integer"
				}
			}
		},
		"ResourceIdentifier": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedUsers": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/User"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableUser": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"login_name": {
									"type": "string"
								},
								"password": {
									"type": "string"
								},
								"given_name": {
									"type": "string"
								},
								"family_name": {
									"type": "string"
								},
								"display_name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"birthday": {
									"type": "string"
								},
								"sex": {
									"type": "int"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"groups": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"User": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"login_name": {
									"type": "string"
								},
								"given_name": {
									"type": "string"
								},
								"family_name": {
									"type": "string"
								},
								"display_name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"birthday": {
									"type": "string"
								},
								"sex": {
									"type": "int"
								},
								"created_at": {
									"type": "string"
								},
								"updated_at": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"groups": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedMeta": {
			"type": "object",
			"properties": {
				"total": {
					"type": "integer"
				},
				"first": {
					"type": "integer"
				},
				"next": {
					"type": "integer"
				},
				"previous": {
					"type": "integer"
				},
				"last": {
					"type": "integer"
				}
			}
		}
	}
}